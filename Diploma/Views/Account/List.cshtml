@using Diploma.Models
@using System.Security.Claims;
@model List<UserViewModel> 

@{
    ViewData["Title"] = "Accounts list";
    int userRoleID = int.Parse(User.Claims.First(c => c.Type == "RoleID").Value);
}
<table>
    <tr>
        <th>@Html.LabelFor(model=>model.First().ID)</th>
        <th>@Html.LabelFor(model=>model.First().Login)</th>
        <th>@Html.LabelFor(model=>model.First().RoleName)</th>
        <th>@Html.LabelFor(model=>model.First().Name)</th>
        <th>@Html.LabelFor(model=>model.First().Surname)</th>
        <th>@Html.LabelFor(model=>model.First().Patronymic)</th>
        @if (userRoleID == 3)
        {
            <th>Set Role</th>
        }
    </tr>
    @{
        var list = Model.ToArray();
    }
    @for (int i = 0; i < list.Length; i++)
    { 
        var m = list[i];
        <tr>
            <td>@m.ID</td>
            <td>@m.Login</td>
            <td>@m.RoleName</td>
            <td>@m.Name</td>
            <td>@m.Surname</td>
            <td>@m.Patronymic</td>
            @if (userRoleID != 3 || m.RoleId == 3) continue;
            <td>@if (m.RoleId == 2)
                {
                    @Html.ActionLink("Set Admin role", "SetRole", "Account", new { RoleID = 1, UserID = m.ID }, null);
                }
                else
                {
                    @Html.ActionLink("Set User role", "SetRole", "Account", new { RoleID = 2, UserID = m.ID }, null);
                }
            </td>
            
        </tr>
    }
</table>

